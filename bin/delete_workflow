#!/usr/bin/env ruby
# Copyright (c) 2011, 2012 The University of Manchester, UK.
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#  * Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
#  * Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
#  * Neither the names of The University of Manchester nor the names of its
#    contributors may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Author: Robert Haines

require_relative '../lib/wrangler'
require_relative '../lib/bin_support'
require 'hirb'

puts "Please select a workflow to delete from the database:"
workflows = Workflow.all
if workflows.empty?
  puts "No workflows in database - nothing deleted."
  exit(0)
end

puts Hirb::Helpers::AutoTable.render workflows,
  :fields => [:id, :title, :version], :description=>false,
  :headers => { :id => "ID", :title => "Title", :version => "Version" }

del_id = ask_user("\nDelete (or e or q to exit)")
if del_id.match /E|e|Q|q/
  puts "Exiting. No workflows deleted."
  exit(0)
end

del_id = del_id.to_i
begin
  del_wf = Workflow.find(del_id)
rescue
  puts "No such workflow (#{del_id}) - nothing deleted."
  exit(1)
end
confirm = ask_user("\nSure?", "No")

case confirm
when /Y|y|Yes|YES|yes/
  del_wf.destroy
  puts "Workflow #{del_id} has been deleted!"
else
  puts "Workflow #{del_id} not deleted."
end
